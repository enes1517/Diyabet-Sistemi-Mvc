@{
    ViewData["Title"] = "Hasta Detayları";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Hasta Bilgileri -->
<div class="card mb-4">
    <div class="card-header">Hasta Bilgileri</div>
    <div class="card-body">
        @if (ViewBag.Hasta != null)
        {
            var hasta = ViewBag.Hasta;
            <p><strong>Ad Soyad:</strong> @hasta["Ad"] @hasta["Soyad"]</p>
            <p><strong>TC:</strong> @hasta["TC"]</p>
            <p><strong>E-posta:</strong> @hasta["Email"]</p>
            <p><strong>Doğum Tarihi:</strong> @Convert.ToDateTime(hasta["DogumTarihi"]).ToString("dd.MM.yyyy")</p>
            <p><strong>Cinsiyet:</strong> @hasta["Cinsiyet"]</p>
            <p><strong>Boy:</strong> @hasta["Boy"] cm</p>
            <p><strong>Kilo:</strong> @hasta["Kilo"] kg</p>
            @if (!DBNull.Value.Equals(hasta["ProfilResim"]))
            {
                <img src="data:image/jpeg;base64,@Convert.ToBase64String((byte[])hasta["ProfilResim"])" alt="Profil Resmi" class="img-thumbnail" style="max-width: 100px;" />
            }
        }
        else
        {
            <p class="text-danger">Hasta bilgileri yüklenemedi.</p>
        }
    </div>
</div>

<!-- Hasta Veri Girişi -->
<div class="card mb-4">
    <div class="card-header">Kan Şekeri ve Belirti Girişi</div>
    <div class="card-body">
        <form asp-action="HastaDetay" method="post">
            <input type="hidden" name="id" value="@ViewBag.Hasta["HastaID"]" />
            <div class="form-group mb-3">
                <label class="form-label">Kan Şekeri Değeri (mg/dL)</label>
                <input type="number" step="0.1" name="olcumDegeri" class="form-control" required>
            </div>
            <div class="form-group mb-3">
                <label class="form-label">Belirtiler (Çoklu seçim)</label>
                <select name="belirtiler" class="form-control" multiple>
                    <option value="Nöropati">Nöropati</option>
                    <option value="Polifaji">Polifaji</option>
                    <option value="Yorgunluk">Yorgunluk</option>
                    <option value="Polidipsi">Polidipsi</option>
                    <option value="Bulanık Görme">Bulanık Görme</option>
                    <option value="Yaraların Yavaş İyileşmesi">Yaraların Yavaş İyileşmesi</option>
                </select>
            </div>
            <button type="submit" class="btn btn-primary">Gönder</button>
        </form>
    </div>
</div>

<div class="card mb-4">
    <div class="card-header">Son Hasta Aktiviteleri</div>
    <div class="card-body">
        <h5>Son Kan Şekeri Ölçümleri</h5>
        @if (ViewBag.KanSekeri != null && ViewBag.KanSekeri.Rows.Count > 0)
        {
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Değer (mg/dL)</th>
                        <th>Tarih</th>
                        <th>Saat</th>
                        <th>Tür</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        int kanSekeriCount = 0;
                        foreach (System.Data.DataRow olcum in ViewBag.KanSekeri.Rows)
                        {
                            if (kanSekeriCount >= 5) { break; }
                            <tr>
                                <td>@olcum["OlcumDegeri"]</td>
                                <td>@Convert.ToDateTime(olcum["OlcumTarihi"]).ToString("dd.MM.yyyy")</td>
                                <td>@olcum["OlcumSaati"]</td>
                                <td>@olcum["OlcumTuru"]</td>
                            </tr>
                            kanSekeriCount++;
                        }
                    }
                </tbody>
            </table>
        }
        else
        {
            <p>Son kan şekeri ölçümü bulunmamaktadır.</p>
        }

        <h5>Son Belirtiler</h5>
        @if (ViewBag.Belirtiler != null && ViewBag.Belirtiler.Rows.Count > 0)
        {
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Belirti</th>
                        <th>Tarih</th>
                        <th>Şiddet</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        int belirtiCount = 0;
                        foreach (System.Data.DataRow belirti in ViewBag.Belirtiler.Rows)
                        {
                            if (belirtiCount >= 5) { break; }
                            <tr>
                                <td>@belirti["BelirtiAdi"]</td>
                                <td>@Convert.ToDateTime(belirti["Tarih"]).ToString("dd.MM.yyyy")</td>
                                <td>@belirti["Siddet"]</td>
                            </tr>
                            belirtiCount++;
                        }
                    }
                </tbody>
            </table>
        }
        else
        {
            <p>Son belirti kaydı bulunmamaktadır.</p>
        }

        <h5>Son Diyet Güncellemeleri</h5>
        @if (ViewBag.Diyet != null && ViewBag.Diyet.Rows.Count > 0)
        {
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Diyet Türü</th>
                        <th>Tarih</th>
                        <th>Uygulandı mı?</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        int diyetCount = 0;
                        foreach (System.Data.DataRow diyet in ViewBag.Diyet.Rows)
                        {
                            if (diyetCount >= 5) { break; }
                            <tr>
                                <td>@diyet["TurAdi"]</td>
                                <td>@Convert.ToDateTime(diyet["Tarih"]).ToString("dd.MM.yyyy")</td>
                                <td>@(Convert.ToBoolean(diyet["UygulandiMi"]) ? "Evet" : "Hayır")</td>
                            </tr>
                            diyetCount++;
                        }
                    }
                </tbody>
            </table>
        }
        else
        {
            <p>Son diyet kaydı bulunmamaktadır.</p>
        }

        <h5>Son Egzersiz Güncellemeleri</h5>
        @if (ViewBag.Egzersiz != null && ViewBag.Egzersiz.Rows.Count > 0)
        {
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Egzersiz Türü</th>
                        <th>Tarih</th>
                        <th>Yapıldı mı?</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        int egzersizCount = 0;
                        foreach (System.Data.DataRow egzersiz in ViewBag.Egzersiz.Rows)
                        {
                            if (egzersizCount >= 5) { break; }
                            <tr>
                                <td>@egzersiz["TurAdi"]</td>
                                <td>@Convert.ToDateTime(egzersiz["Tarih"]).ToString("dd.MM.yyyy")</td>
                                <td>@(Convert.ToBoolean(egzersiz["YapildiMi"]) ? "Evet" : "Hayır")</td>
                            </tr>
                            egzersizCount++;
                        }
                    }
                </tbody>
            </table>
        }
        else
        {
            <p>Son egzersiz kaydı bulunmamaktadır.</p>
        }
    </div>
</div>

<!-- Kan Şekeri Ölçümleri -->
<div class="card mb-4">
    <div class="card-header">Kan Şekeri Ölçümleri</div>
    <div class="card-body">
        @if (ViewBag.KanSekeri != null && ViewBag.KanSekeri.Rows.Count > 0)
        {
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Değer (mg/dL)</th>
                        <th>Tarih</th>
                        <th>Saat</th>
                        <th>Tür</th>
                        <th>Son Güncelleme</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (System.Data.DataRow olcum in ViewBag.KanSekeri.Rows)
                    {
                        <tr>
                            <td>@olcum["OlcumDegeri"]</td>
                            <td>@Convert.ToDateTime(olcum["OlcumTarihi"]).ToString("dd.MM.yyyy")</td>
                            <td>@olcum["OlcumSaati"]</td>
                            <td>@olcum["OlcumTuru"]</td>
                            <td>@Convert.ToDateTime(olcum["OlcumTarihi"]).ToString("dd.MM.yyyy")</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <p>Kan şekeri ölçümü bulunmamaktadır.</p>
        }
    </div>
</div>

<!-- Belirtiler -->
<div class="card mb-4">
    <div class="card-header">Belirtiler</div>
    <div class="card-body">
        @if (ViewBag.Belirtiler != null && ViewBag.Belirtiler.Rows.Count > 0)
        {
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Belirti</th>
                        <th>Tarih</th>
                        <th>Şiddet</th>
                        <th>Son Güncelleme</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (System.Data.DataRow belirti in ViewBag.Belirtiler.Rows)
                    {
                        <tr>
                            <td>@belirti["BelirtiAdi"]</td>
                            <td>@Convert.ToDateTime(belirti["Tarih"]).ToString("dd.MM.yyyy")</td>
                            <td>@belirti["Siddet"]</td>
                            <td>@Convert.ToDateTime(belirti["Tarih"]).ToString("dd.MM.yyyy")</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <p>Belirti kaydı bulunmamaktadır.</p>
        }
    </div>
</div>

<!-- İnsülin Uygulamaları -->
<div class="card mb-4">
    <div class="card-header">İnsülin Uygulamaları</div>
    <div class="card-body">
        @if (ViewBag.Insulin != null && ViewBag.Insulin.Rows.Count > 0)
        {
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Doz (ml)</th>
                        <th>Tarih</th>
                        <th>Saat</th>
                        <th>Ortalama Kan Şekeri</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (System.Data.DataRow insulin in ViewBag.Insulin.Rows)
                    {
                        <tr>
                            <td>@insulin["Doz"]</td>
                            <td>@Convert.ToDateTime(insulin["UygulamaTarihi"]).ToString("dd.MM.yyyy")</td>
                            <td>@insulin["UygulamaSaati"]</td>
                            <td>@insulin["OrtalamaKanSekeri"]</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <p>İnsülin kaydı bulunmamaktadır.</p>
        }
    </div>
</div>

<!-- Insulin Önerisi Gönderme -->
<div class="card mt-4">
    <div class="card-header">Insulin Önerisi</div>
    <div class="card-body">
        @if (ViewBag.Oneriler != null && ViewBag.Oneriler.Rows.Count > 0)
        {
            var insulinOnerisi = ViewBag.Oneriler.Rows[ViewBag.Oneriler.Rows.Count - 1]["InsulinOnerisi"].ToString();
            if (!string.IsNullOrEmpty(insulinOnerisi) && insulinOnerisi != "Bulunamadı" && insulinOnerisi != "Yok (Hipoglisemi)" && insulinOnerisi != "Yok (Normal)")
            {
                <p><strong>Önerilen Insulin Dozu:</strong> @insulinOnerisi</p>
                <form asp-action="HastaDetay" method="post">
                    <input type="hidden" name="id" value="@ViewBag.Hasta["HastaID"]" />
                    <input type="hidden" name="sendInsulinSuggestion" value="true" />
                    <button type="submit" class="btn btn-success">Öneriyi Hastaya Gönder</button>
                </form>
            }
            else
            {
                <p>Insulin önerisi mevcut değil veya uygulanabilir değil.</p>
            }
        }
        else
        {
            <p>Insulin önerisi için kan şekeri ve belirti verileri gerekli.</p>
        }
    </div>
</div>

<!-- Diyet Takibi -->
<div class="card mb-4">
    <div class="card-header">Diyet Takibi</div>
    <div class="card-body">
        @if (ViewBag.Diyet != null && ViewBag.Diyet.Rows.Count > 0)
        {
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Diyet Türü</th>
                        <th>Tarih</th>
                        <th>Uygulandı mı?</th>
                        <th>Son Güncelleme</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (System.Data.DataRow diyet in ViewBag.Diyet.Rows)
                    {
                        <tr>
                            <td>@diyet["TurAdi"]</td>
                            <td>@Convert.ToDateTime(diyet["Tarih"]).ToString("dd.MM.yyyy")</td>
                            <td>@(Convert.ToBoolean(diyet["UygulandiMi"]) ? "Evet" : "Hayır")</td>
                            <td>@Convert.ToDateTime(diyet["Tarih"]).ToString("dd.MM.yyyy")</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <p>Diyet kaydı bulunmamaktadır.</p>
        }
        <a href="@Url.Action("DiyetOlustur", "Doctor", new { hastaId = ViewBag.Hasta["HastaID"] })" class="btn btn-primary">Diyet Planı Oluştur</a>
    </div>
</div>

<!-- Egzersiz Takibi -->
<div class="card mb-4">
    <div class="card-header">Egzersiz Takibi</div>
    <div class="card-body">
        @if (ViewBag.Egzersiz != null && ViewBag.Egzersiz.Rows.Count > 0)
        {
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Egzersiz Türü</th>
                        <th>Tarih</th>
                        <th>Yapıldı mı?</th>
                        <th>Son Güncelleme</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (System.Data.DataRow egzersiz in ViewBag.Egzersiz.Rows)
                    {
                        <tr>
                            <td>@egzersiz["TurAdi"]</td>
                            <td>@Convert.ToDateTime(egzersiz["Tarih"]).ToString("dd.MM.yyyy")</td>
                            <td>@(Convert.ToBoolean(egzersiz["YapildiMi"]) ? "Evet" : "Hayır")</td>
                            <td>@Convert.ToDateTime(egzersiz["Tarih"]).ToString("dd.MM.yyyy")</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <p>Egzersiz kaydı bulunmamaktadır.</p>
        }
        <a href="@Url.Action("EgzersizOlustur", "Doctor", new { hastaId = ViewBag.Hasta["HastaID"] })" class="btn btn-primary">Egzersiz Planı Oluştur</a>
    </div>
</div>

<!-- Uyarı Oluştur -->
<div class="card">
    <div class="card-header">Yeni Uyarı Oluştur</div>
    <div class="card-body">
        <form asp-action="UyariOlustur" method="post">
            <input type="hidden" name="hastaId" value="@ViewBag.Hasta["HastaID"]" />
            <div class="form-group mb-3">
                <label class="form-label">Uyarı Türü</label>
                <select name="uyariTuru" class="form-control" required>
                    <option value="Acil Uyarı">Acil Uyarı</option>
                    <option value="Takip Uyarısı">Takip Uyarısı</option>
                    <option value="Ölçüm Eksik Uyarısı">Ölçüm Eksik Uyarısı</option>
                    <option value="Ölçüm Yetersiz Uyarısı">Ölçüm Yetersiz Uyarısı</option>
                </select>
            </div>
            <div class="form-group mb-3">
                <label class="form-label">Uyarı Mesajı</label>
                <textarea name="uyariMesaji" class="form-control" rows="4" required></textarea>
            </div>
            <button type="submit" class="btn btn-success">Uyarı Gönder</button>
        </form>
    </div>
</div>

<!-- Diyet & Egzersiz Önerileri -->
<div class="card mt-4">
    <div class="card-header">Diyet ve Egzersiz Önerileri</div>
    <div class="card-body">
        <form asp-action="HastaDetay" method="get" class="mb-4">
            <input type="hidden" name="id" value="@ViewBag.Hasta["HastaID"]" />
            <div class="row">
                <div class="col-md-4 mb-3">
                    <label class="form-label">Başlangıç Tarihi</label>
                    <input type="date" name="startDate" class="form-control" value="@(ViewBag.StartDate?.ToString("yyyy-MM-dd"))" />
                </div>
                <div class="col-md-4 mb-3">
                    <label class="form-label">Bitiş Tarihi</label>
                    <input type="date" name="endDate" class="form-control" value="@(ViewBag.EndDate?.ToString("yyyy-MM-dd"))" />
                </div>
                <div class="col-md-4 align-self-end">
                    <button type="submit" class="btn btn-primary">Filtrele</button>
                </div>
            </div>
        </form>

        @if (ViewBag.Oneriler != null && ViewBag.Oneriler.Rows.Count > 0)
        {
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th>Kan Şekeri Seviyesi</th>
                        <th>Belirtiler</th>
                        <th>Diyet</th>
                        <th>Egzersiz</th>
                        <th>İşlem</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (System.Data.DataRow oneri in ViewBag.Oneriler.Rows)
                    {
                        <tr class="recommendation-row" data-oneri-id="@oneri["OneriID"]"
                            data-kan-sekeri="@oneri["KanSekeriSeviyesi"]"
                            data-belirtiler="@oneri["Belirtiler"]"
                            data-diyet="@oneri["Diyet"]"
                            data-egzersiz="@oneri["Egzersiz"]">
                            <td>@oneri["KanSekeriSeviyesi"]</td>
                            <td>@oneri["Belirtiler"]</td>
                            <td>@oneri["Diyet"]</td>
                            <td>@oneri["Egzersiz"]</td>
                            <td>
                                <button class="btn btn-sm btn-info show-chart-btn">Grafiği Göster</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <div class="mt-4">
                <canvas id="bloodSugarChart" style="max-height: 400px;"></canvas>
                <div id="recommendationDetails" class="mt-4">
                    <h5>Seçili Öneri Detayları</h5>
                    <p id="selectedRecommendationText">Lütfen bir öneri seçin.</p>
                </div>
            </div>
        }
        else
        {
            <p>Öneri bulunmamaktadır. Lütfen kan şekeri ve belirti giriniz.</p>
        }
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.4/dist/chart.umd.min.js"></script>
    <script>
        let onerilerData = [
        @if (ViewBag.Oneriler != null && ViewBag.Oneriler.Rows.Count > 0)
        {
            var isFirst = true;
            foreach (System.Data.DataRow oneri in ViewBag.Oneriler.Rows)
            {
                var kanSekeri = oneri["KanSekeriSeviyesi"].ToString();
                var belirtiler = oneri["Belirtiler"].ToString();
                var diyet = oneri["Diyet"].ToString();
                var egzersiz = oneri["Egzersiz"].ToString();
                if (!isFirst)
                {
                    @:,
                }
                isFirst = false;
                <text>
                        {
                            oneriId: '@oneri["OneriID"]',
                        kanSekeri: '@kanSekeri',
                        belirtiler: '@belirtiler',
                        diyet: '@diyet',
                        egzersiz: '@egzersiz'
                                        }
                </text>
            }
        }
                ];

        let currentChart = null;

        function parseBloodSugarValue(kanSekeri) {
            try {
                if (kanSekeri.includes('-')) {
                    const rangeMatch = kanSekeri.match(/(\d+)-(\d+)/);
                    if (rangeMatch) {
                        const min = parseFloat(rangeMatch[1]);
                        const max = parseFloat(rangeMatch[2]);
                        return (min + max) / 2; 
                    }
                }
                const singleMatch = kanSekeri.match(/(\d+\.?\d*)/);
                return singleMatch ? parseFloat(singleMatch[0]) : NaN;
            } catch (e) {
                console.error('Error parsing blood sugar value:', kanSekeri, e);
                return NaN;
            }
        }

        const ranges = [
            { label: "<70 mg/dL", min: -Infinity, max: 70 },
            { label: "70-110 mg/dL", min: 70, max: 110 },
            { label: "111-150 mg/dL", min: 111, max: 150 },
            { label: "151-200 mg/dL", min: 151, max: 200 },
            { label: ">200 mg/dL", min: 201, max: Infinity }
        ];

        function updateChartAndDetails(oneri) {
            if (currentChart) {
                currentChart.destroy();
            }

            const value = parseBloodSugarValue(oneri.kanSekeri);
            if (isNaN(value)) {
                console.error('Invalid blood sugar value for recommendation:', oneri);
                return;
            }

            let selectedRangeIndex = -1;
            for (let i = 0; i < ranges.length; i++) {
                if (value >= ranges[i].min && value <= ranges[i].max) {
                    selectedRangeIndex = i;
                    break;
                }
            }

            if (selectedRangeIndex === -1) {
                console.error('Blood sugar value out of defined ranges:', value);
                return;
            }

            const dietCount = (oneri.diyet && oneri.diyet !== "Bulunamadı" || oneri.diyet !== "Ortalama değer için diyet önerisi mevcut değil") ? 1 : 0;
            const exerciseCount = (oneri.egzersiz && oneri.egzersiz !== "Bulunamadı" || oneri.egzersiz !== "Ortalama değer için egzersiz önerisi mevcut değil") ? 1 : 0;
            const symptoms = (oneri.belirtiler && oneri.belirtiler !== "Belirti yok" || oneri.belirtiler !== "Ortalama değer için belirtiler değerlendirilmedi") ? oneri.belirtiler.split(", ") : [];

            const recommendationDetails = document.getElementById('selectedRecommendationText');
            if (recommendationDetails) {
                recommendationDetails.innerHTML = `
                            <strong>Kan Şekeri Seviyesi:</strong> ${oneri.kanSekeri}<br>
                            <strong>Belirtiler:</strong> ${oneri.belirtiler || 'Yok'}<br>
                            <strong>Diyet:</strong> ${oneri.diyet || 'Yok'}<br>
                            <strong>Egzersiz:</strong> ${oneri.egzersiz || 'Yok'}
                        `;
            }

            const ctx = document.getElementById('bloodSugarChart')?.getContext('2d');
            if (ctx) {
                currentChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: [ranges[selectedRangeIndex].label],
                        datasets: [
                            {
                                label: 'Diyet Önerisi',
                                data: [dietCount],
                                backgroundColor: 'rgba(54, 162, 235, 0.6)', 
                                borderColor: 'rgba(54, 162, 235, 1)',
                                borderWidth: 1
                            },
                            {
                                label: 'Egzersiz Önerisi',
                                data: [exerciseCount],
                                backgroundColor: 'rgba(255, 99, 132, 0.6)', 
                                borderColor: 'rgba(255, 99, 132, 1)',
                                borderWidth: 1
                            }
                        ]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true,
                                max: 1,
                                ticks: {
                                    stepSize: 1,
                                    callback: function (value) {
                                        return value === 1 ? 'Var' : 'Yok';
                                    },
                                    color: '#333333'
                                },
                                title: {
                                    display: true,
                                    text: 'Öneri Durumu',
                                    color: '#333333'
                                },
                                grid: {
                                    color: 'rgba(0, 0, 0, 0.1)'
                                }
                            },
                            x: {
                                title: {
                                    display: true,
                                    text: 'Kan Şekeri Seviyesi (mg/dL)',
                                    color: '#333333'
                                },
                                ticks: {
                                    color: '#333333'
                                },
                                grid: {
                                    color: 'rgba(0, 0, 0, 0.1)'
                                }
                            }
                        },
                        plugins: {
                            legend: {
                                display: true,
                                position: 'top',
                                labels: {
                                    color: '#333333',
                                    font: {
                                        size: 14
                                    }
                                }
                            },

                            title: {
                                display: true,
                                text: `Seçili Öneri: ${oneri.kanSekeri}`,
                                color: '#333333',
                                font: {
                                    size: 16
                                }
                            },
                            plugins: {
                                legend: {
                                    display: true,
                                    position: 'top',
                                    labels: {
                                        color: '#333333',
                                        font: {
                                            size: 14
                                        }
                                    }
                                },
                                title: {
                                    display: true,
                                    text: `Seçili Öneri: ${oneri.kanSekeri}`,
                                    color: '#333333',
                                    font: {
                                        size: 16
                                    }
                                },
                                tooltip: {
                                    enabled: false 
                                }
                            }
                        }
                    }
                });
            } else {
                console.error('Canvas element not found');
            }
        }

        document.querySelectorAll('.show-chart-btn').forEach(button => {
            button.addEventListener('click', function () {
                const row = this.closest('.recommendation-row');
                const oneriId = row.dataset.oneriId;
                const oneri = onerilerData.find(item => item.oneriId === oneriId);
                if (oneri) {
                    updateChartAndDetails(oneri);
                    document.querySelectorAll('.recommendation-row').forEach(r => r.classList.remove('table-active'));
                    row.classList.add('table-active');
                }
            });
        });

        if (onerilerData.length > 0) {
            updateChartAndDetails(onerilerData[0]);
            document.querySelector('.recommendation-row')?.classList.add('table-active');
        }
    </script>
}